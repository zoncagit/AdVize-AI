"""add is_active and verification columns to USER

Revision ID: cd2158d447e4
Revises: 7774af2cabc0
Create Date: 2025-06-30 02:00:40.710524

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cd2158d447e4'
down_revision: Union[str, Sequence[str], None] = '7774af2cabc0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_PREFERENCE_id'), table_name='PREFERENCE')
    op.drop_table('PREFERENCE')
    op.alter_column('PRE_VERIFICATION_USER', 'verification_code',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.add_column('USER', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('USER', sa.Column('verification_code', sa.String(), nullable=True))
    op.add_column('USER', sa.Column('code_expires_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('USER', 'code_expires_at')
    op.drop_column('USER', 'verification_code')
    op.drop_column('USER', 'is_active')
    op.alter_column('PRE_VERIFICATION_USER', 'verification_code',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.create_table('PREFERENCE',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lastname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('verification_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('PREFERENCE_pkey')),
    sa.UniqueConstraint('email', name=op.f('PREFERENCE_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('verification_code', name=op.f('PREFERENCE_verification_code_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_PREFERENCE_id'), 'PREFERENCE', ['id'], unique=False)
    # ### end Alembic commands ###
